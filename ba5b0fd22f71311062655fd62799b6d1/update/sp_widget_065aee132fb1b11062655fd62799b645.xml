<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>kb</category>
        <client_script><![CDATA[function ($scope, $element, $rootScope, $timeout, spKBCategoryService) {
	var accessWordCountMax = 15;
	var c = this;
	init();
	
	if (spKBCategoryService.isCategorySelected())
		focusTitle();
	
	c.getShortenText = function getShortenText(text) {
		var wordsArray = text.split(" ");
		if (wordsArray.length > accessWordCountMax)
			wordsArray = wordsArray.slice(0, accessWordCountMax);
		return wordsArray.join(" ");
	}

	var removeListener = spKBCategoryService.addListener(function(catId) {
		c.data.category = catId;
		c.data.items = null;
		c.server.update().then(function(){
			init();
		});
	});
	
	function focusTitle(){
		$timeout(function() {
			var kbCategoryTitle = $element.find('.panel-title');
			if (kbCategoryTitle[0])  
				kbCategoryTitle[0].focus();
			spKBCategoryService.setCategorySelected(false);
		}, 500);
	}
	
	function init() {
		$timeout(function() {
			$rootScope.$broadcast('sp.update.breadcrumbs', c.data.breadcrumbs);
		});
	}		
	$scope.hideItemWidget = !$scope.data.category;
	$scope.showCategories =  function() {
		$scope.hideItemWidget = true;
		$rootScope.$broadcast("$sp.kb.show.categories_widget");
	}
	$scope.$on('$destroy', function(){
		removeListener();
	});

	$scope.loadMore = function () {
		var focusableIndex = c.data.limit;
		c.data.new_limit = c.data.limit + (parseInt(c.options.limit_article) || 10);
		c.server.update().then(function(){
			$scope.focusOnKbArticle(focusableIndex);
		});
	}

	$scope.focusOnKbArticle = function(index) {
		$timeout(function(){
			var kbArticles = $element.find(".sp-kb-topic-article a");
			if (kbArticles[index]) kbArticles[index].focus();
		});
	};
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.btn-loadmore {
      margin-left: auto;
      margin-right: auto;
      display: block;
      margin-bottom: 20px;
    }

    .kb-star-on {
      color: $fav-star-color !important;
      text-shadow: $fav-star-outline;
    }

    .kb-star-off {
      color: $fav-star-color-off !important;
      text-shadow: $fav-star-outline;
    }
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color</field_list>
        <has_preview>false</has_preview>
        <id>mvn_kb_category_page</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>MultiverseNow KB Category Page</name>
        <option_schema>[{"name":"show_star_rating","default_value":"Use system properties","section":"Presentation","label":"Show star rating","type":"choice","choices":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"},{"label":"Use system properties","value":"Use system properties"}]},{"hint":"Number of articles to display per page","name":"limit_article","section":"other","default_value":"10","label":"Number of articles to display per page","type":"integer"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[// populate the 'data' variable
if (input)
	data.category = input.category;
else
	data.category = $sp.getParameter("kb_category");

var kbIds = $sp.getKnowledgeBases();
var kbs = kbIds.split(',');
data.kmSearchOrder = gs.getProperty("glide.service_portal.honor.knowman.search.order", "false");
data.KbArticlesSortBy = gs.getProperty("glide.knowman.order.search", "relevancy");

data.limit = parseInt(options.limit_article) || 10;

if (input && input.new_limit)
    data.limit = input.new_limit;

var kb_cat = new GlideRecord("kb_category");
data.categoryDisplay = gs.getMessage("Select a category");
data.items = [];
data.categoryExists = false;
if (kb_cat.get(data.category)) {
  data.categoryExists = true;
  data.categoryDisplay = kb_cat.getDisplayValue();
  data.items = getKBCategoryArticleSummaries();
}

var diff = data.items.length - data.limit;
if (diff <= 0)
    data.showMore = false;
else {
	data.items.splice(data.limit);
	data.showMore = true;
}
data.show_msg = gs.getMessage("Showing {0} items", data.limit + "");

var kbId = $sp.getParameter('kb_id');

data.kbId = kbId;

if (kbId) {
	var gr = new GlideRecord("kb_knowledge_base");
	if (gr.get(kbId))
		data.kbName = gr.getDisplayValue("title");
}

data.kb_knowledge_page = $sp.getDisplayValue("kb_knowledge_page") || "kb_view";

data.breadcrumbs = [{label: data.categoryDisplay, url: '#'}];
if (kb_cat.parent_id) {
    var rec = kb_cat.parent_id.getRefRecord();
    while (rec.getRecordClassName() == "kb_category") {
        if (kbId)
            data.breadcrumbs.unshift({label: rec.getDisplayValue(), url: '?id=kb_category&kb_category=' + rec.getUniqueValue() + '&kb_id='+ kbId});
        else
            data.breadcrumbs.unshift({label: rec.getDisplayValue(), url: '?id=kb_category&kb_category=' + rec.getUniqueValue()});
        rec = rec.parent_id.getRefRecord();
    }
}

if (kbs && kbs.length > 1) {
	if (kbId)
		data.breadcrumbs.unshift({label: data.kbName, url: '?id=' + data.kb_knowledge_page + '&kb_id='+ kbId});
	data.breadcrumbs.unshift({label: gs.getMessage("All Knowledge Bases"), url: '?id=' + data.kb_knowledge_page});
} else
	data.breadcrumbs.unshift({label: gs.getMessage("Knowledge Base"), url: '?id=' + data.kb_knowledge_page});

data.showStarRating = showStarRating();

function getKBCategoryArticleSummaries() {
    var kbSortObj = {
        "views": "sys_view_count",
        "relevancy": "relevancy",
        "sys_updated_on": "sys_updated_on"
    };
    var kbFields = "sys_view_count,author,rating,sys_updated_on,sys_id";
    var obj = {
        keyword: '',
        start: '0',
        end: data.limit + 1,
        language: '',
        variables: {
            'kb_category': [data.category],
            'kb_knowledge_base': kbs
        },
        knowledge_fields: kbFields,
        social_fields: '',
        category_as_tree: true,
        attachment: false,
        resources: '',
        order_desc: true
    };

    if (data.kmSearchOrder)
        obj.order = kbSortObj[data["KbArticlesSortBy"]] + ',' + obj.order_desc;

    var resultDataList = (new KBPortalServiceImpl().getResultData(obj)).results || [];
    var kbFieldsList = kbFields.split(',');
    if (resultDataList.length > 0) {
        resultDataList.map(function(resultData) {
            if (resultData.meta) {
                for (var i = 0; i < kbFieldsList.length; i++)
                    resultData[kbFieldsList[i]] = resultData.meta[kbFieldsList[i]] ? resultData.meta[kbFieldsList[i]].display_value : '';
            }
            if (resultData.snippet)
                resultData.text = resultData.snippet;

        });
    }
    return resultDataList;
}

function showStarRating() {
	if (options.show_star_rating == "Yes")
		return true;

	if (options.show_star_rating == "No")
		return false;

	// check gating property for all rating options
	if (gs.getProperty("glide.knowman.show_rating_options", "true") != "true")
		return false;

	// does user have the right role?
	if (!gs.hasRole(gs.getProperty("glide.knowman.show_rating_options.roles")))
		return false;

	// check specific property for stars
	if (gs.getProperty("glide.knowman.show_star_rating", "true") != "true")
		return false;

	// does user have the right role?
	return gs.hasRole(gs.getProperty("glide.knowman.show_star_rating.roles"));
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-15 22:50:55</sys_created_on>
        <sys_id>065aee132fb1b11062655fd62799b645</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>MultiverseNow KB Category Page</sys_name>
        <sys_package display_value="MultiverseNow" source="x_903520_rpg">ba5b0fd22f71311062655fd62799b6d1</sys_package>
        <sys_policy/>
        <sys_scope display_value="MultiverseNow">ba5b0fd22f71311062655fd62799b6d1</sys_scope>
        <sys_update_name>sp_widget_065aee132fb1b11062655fd62799b645</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-10-15 22:52:33</sys_updated_on>
        <template><![CDATA[<div ng-class="{'hidden-xs' : hideItemWidget}">
  <a href="javascript:void(0);" ng-click="showCategories()" class="visible-xs-inline-block m-b-sm pointer" aria-label="${All Categories}">
     <i class="fa fa-chevron-left m-r-xs"></i> ${All Categories}
  </a>
  <div ng-if="data.categoryExists" class="panel panel-{{::options.color}} b" role="region" aria-label="${Knowledge base article results}">
    <div class="panel-heading">
      <h2 class="panel-title" tabindex="-1">{{data.categoryDisplay}}</h2>
    </div>

    <div role="list" class="panel-body">
      <div ng-if="data.items.length == 0">
        (${No articles})
      </div>
      <div role="listitem" ng-repeat="kb_article in data.items" class="sp-kb-topic-article m-b-lg">
          <a ng-href="{{kb_article.link}}">{{::kb_article.title}}</a>
        <div style="max-height: 3em; overflow: hidden; padding-top:4px;" aria-label="{{::c.getShortenText(kb_article.text)}}">{{::kb_article.text}}</div>
        <div class="kb-about" style="padding-top:4px;">
          <span class="about-outer-span">
            <span class="author pad-right" ng-if="kb_article.author">
              <glyph sn-char="user" class="pad-right" aria-hidden="true"></glyph>
              ${Authored by {{::kb_article.author}}}
            </span>
            <span ng-if="kb_article.meta.sys_view_count.value == 1" class="views pad-right">
              <span class="pad-right">&#8226;</span> <glyph sn-char="eye-open" class="pad-right"></glyph>
              ${{{::kb_article.sys_view_count}} View}
            </span>
            <span ng-if="kb_article.meta.sys_view_count.value > 1" class="views pad-right">
              <span class="pad-right">&#8226;</span> <glyph sn-char="eye-open" class="pad-right"></glyph>
              ${{{::kb_article.sys_view_count}} Views}
            </span>
            <span class="published pad-right">
              <span class="pad-right" aria-hidden="true">&#8226;</span> <glyph sn-char="calendar" class="pad-right" aria-hidden="true"></glyph>
              <sn-time-ago timestamp="kb_article.meta.sys_updated_on.value"></sn-time-ago>
            </span>
            <span ng-if="data.showStarRating && kb_article.meta.rating.value">
              <span class="pad-right">&#8226;</span>
              <span class="sr-only">Article rating - {{::kb_article.rating}}</span>
              <uib-rating sp-rating ng-model="::kb_article.meta.rating.value" max="5" readonly="true" aria-hidden="true" state-on="'fa fa-star kb-star-on'" state-off="'fa fa-star kb-star-off'"></uib-rating>
            </span>
          </span>
        </div>
      </div>
    </div>

  </div>
  <div ng-if="data.showMore">
    <div class="text-a-c">
       {{data.show_msg}}
    </div>
    <button class="m-t-xs btn btn-default btn-loadmore" ng-click="loadMore()">
        ${Show More}
    </button>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
